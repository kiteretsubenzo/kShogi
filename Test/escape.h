#ifndef TEST_ESCAPE_H
#define TEST_ESCAPE_H

std::vector<std::string> testEscape
{
	// NO.1
	"h18 y04 e04 g04 k0f u00 r00\n"
	" . . . . . . . . .\n"
	" . . . . . . .R_ .\n"
	" . . . . . . . . .\n"
	" . . . . . . . .U_\n"
	" . . . . . .u_^R^o\n"
	" . . . . . . . . .\n"
	" . . . . . . . . .\n"
	" . . . . . . . . .\n"
	" . . . . . . . . .\n"
	"h00 y00 e00 g00 k00 u00 r00\n"
	"first"
	":"
	"１四 龍(2,5)\n"
	"１四 玉(1,5)\n"
	"１六 玉(1,5)\n"
	,
	// NO.2
	"h18 y04 e04 g04 k0f u00 r00\n"
	" . . . . . . . . .\n"
	" . . . . . . .^R .\n"
	" . . . . . . . . .\n"
	" . . . . . . . .^U\n"
	" . . . . . .^uR_o_\n"
	" . . . . . . . . .\n"
	" . . . . . . . . .\n"
	" . . . . . . . . .\n"
	" . . . . . . . . .\n"
	"h00 y00 e00 g00 k00 u00 r00\n"
	"second"
	":"
	"１四 龍(2,5)\n"
	"１四 玉(1,5)\n"
	"１六 玉(1,5)\n"
	,
	// NO.3
	"h18 y04 e04 g04 k04 u01 r00\n"
	" . . . . . . . . .\n"
	" . . . . . . . .^R\n"
	" . . . . . . . . .\n"
	" . . . . . . . .o_\n"
	" . . . . . .^uR_ .\n"
	" . . . . . . . . .\n"
	" . . . . . . . . .\n"
	" . . . . . . . . .\n"
	" . . . . . . . . .\n"
	"h00 y00 e00 g00 k00 u00 r00\n"
	"second"
	":"
	"１三 歩 打ち\n"
	"１三 杏 打ち\n"
	"１三 桂 打ち\n"
	"１三 銀 打ち\n"
	"１三 金 打ち\n"
	"１三 角 打ち\n"
};

#endif // TEST_ESCAPE_H